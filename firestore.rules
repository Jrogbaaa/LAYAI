rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Campaigns: Public read, only authenticated users can write
    match /campaigns/{campaignId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Notes: Only the owner can read or write their own notes
    match /notes/{noteId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    // Influencers: Public read, only authenticated users can add/update
    match /influencers/{influencerId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Feedback: Authenticated users can submit feedback
    match /feedback/{feedbackId} {
      allow create: if isAuthenticated();
      allow read, update, delete: if isOwner(resource.data.userId);
    }

    // Circuit Breaker Status: Public read, only authenticated users can write
    match /circuit-breaker/{statusId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Firebase Throttler Status: Public read, only authenticated users can write
    match /firebase-throttler/{statusId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // User Profiles: Users can only manage their own profile
    match /users/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Search History: Users can only manage their own search history
    match /search-history/{searchId} {
      allow read, write: if isOwner(resource.data.userId);
    }
    
    // Collaborations: Must be authenticated to manage collaborations
    match /collaborations/{collaborationId} {
      allow read, write: if isAuthenticated();
    }

    // Brand Intelligence: Public read, authenticated write
    match /brand-intelligence/{brandId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }
    
    // Default deny: Secure by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 